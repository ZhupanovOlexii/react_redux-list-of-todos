{"version":3,"sources":["store/index.ts","store/constants.ts","TodoItem.tsx","TodoList.tsx","api.tsx","App.tsx","index.tsx"],"names":["setSortField","sortField","type","getIsLoading","state","isLoading","getIsLoaded","isLoaded","getError","errorMessage","getVisibleTodos","visibleTodos","todos","sort","a","b","title","localeCompare","user","name","completed","initialState","store","createStore","action","filter","todo","id","composeWithDevTools","TodoItem","dispatch","useDispatch","className","onClick","TodoList","map","key","getPreparedTodos","Promise","all","fetch","then","response","json","todosFromServer","usersFromServer","preparedTodos","find","userId","App","useSelector","setTodos","catch","e","handleError","message","Root","ReactDOM","render","document","getElementById"],"mappings":"+RAsBaA,EAAe,SAACC,GAAD,MAAwB,CAClDC,KAdc,UAedD,cASWE,EAAe,SAACC,GAAD,OAAsBA,EAAMC,WAC3CC,EAAc,SAACF,GAAD,OAAsBA,EAAMG,UAE1CC,EAAW,SAACJ,GAAD,OAAsBA,EAAMK,cAEvCC,EAAkB,SAACN,GAC9B,IAAMO,EAAY,YAAOP,EAAMQ,OAE/B,OAAQR,EAAMH,WACZ,IC1CoB,WD2ClBU,EAAaE,MAAK,SAACC,EAAiBC,GAAlB,OAAuCD,EAAEE,MAAMC,cAAcF,EAAEC,UACjF,MAEF,IC7CmB,UD8CjBL,EACGE,MAAK,SAACC,EAAiBC,GAAlB,OAAuCD,EAAEI,KAAKC,KAAKF,cAAcF,EAAEG,KAAKC,SAChF,MAEF,ICjDqB,YDkDnBR,EAAaE,MAAK,SAACC,EAAiBC,GAAlB,OAAwCD,EAAEM,WAAaL,EAAEK,aAC3E,MAEF,QACE,OAAOT,EAGX,OAAOA,GAWHU,EAA0B,CAC9BT,MAAO,GACPX,UAAW,GACXM,UAAU,EACVF,WAAW,EACXI,aAAc,IAoDDa,EAFDC,uBA/CM,WAAyD,IAAxDnB,EAAuD,uDAA/CiB,EAAcG,EAAiC,uCAC1E,OAAQA,EAAOtB,MACb,IA5EkB,gBA6EhB,OAAO,2BACFE,GADL,IAEEC,WAAW,EACXE,UAAU,EACVE,aAAc,KAGlB,IAlFc,YAmFZ,OAAO,2BACFL,GADL,IAEEQ,MAAM,YAAKY,EAAOZ,SAGtB,IAvFiB,eAwFf,OAAO,2BACFR,GADL,IAEEK,aAAce,EAAOf,aACrBJ,WAAW,EACXE,UAAU,IAGd,IAjGmB,iBAkGjB,OAAO,2BACFH,GADL,IAEEC,WAAW,EACXE,UAAU,IAGd,IApGY,UAqGV,OAAO,2BACFH,GADL,IAEEH,UAAWuB,EAAOvB,YAGtB,IAzGgB,SA0Gd,OAAO,2BACFG,GADL,IAEEQ,MAAO,YAAIR,EAAMQ,OAAOa,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAOH,EAAOG,QAG9D,QAAS,OAAOvB,KAImBwB,iCE7ExBC,G,MAvC2B,SAAC,GAAc,IAAZH,EAAW,EAAXA,KACrCI,EAAWC,cAEjB,OACE,oCACE,yBAAKC,UAAWN,EAAKN,UACjB,uBACA,yBAEF,yBAAKY,UAAU,QACb,0BAAMA,UAAU,YAAYN,EAAKC,IACjC,uBAAGK,UAAU,cAAb,QAEG,IACAN,EAAKR,KAAKC,MAEb,uBAAGa,UAAU,eAAb,SAEG,IACAN,EAAKV,OAER,uBAAGgB,UAAU,gBAAb,UAEG,IACAN,EAAKN,UAAY,YAAc,cAElC,4BACElB,KAAK,SACL8B,UAAU,iBACVC,QAAS,kBAAMH,EFXgB,CACzC5B,KAlBkB,SAmBlByB,GES6CD,EAAKC,OAH1C,oBC5BGO,EAAoC,SAAC,GAAe,IAAbtB,EAAY,EAAZA,MAClD,OACE,yBAAKoB,UAAU,cACZpB,EAAMuB,KAAI,SAACT,GAAD,OACT,kBAAC,EAAD,CAAUA,KAAMA,EAAMU,IAAKV,EAAKC,U,iCCG3BU,EAAgB,uCAAG,oCAAAvB,EAAA,sEACmBwB,QAAQC,IAAI,CALtDC,MATa,8CAUjBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UANtBH,MALa,8CAMjBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,YAQC,0CACvBC,EADuB,KACNC,EADM,KAExBC,EAAgBF,EAAgBT,KAAI,SAACT,GAAD,mBAAC,eACtCA,GADqC,IAExCR,KAAM2B,EAAgBE,MAAK,SAAC7B,GAAD,OAAgBA,EAAKS,KAAOD,EAAKsB,eAJhC,kBAOvBF,GAPuB,2CAAH,qDC2EdG,EAtEO,WACpB,IAAMnB,EAAWC,cACXnB,EAAQsC,YAAYxC,GACpBH,EAAW2C,YAAY5C,GACvBD,EAAY6C,YAAY/C,GACxBM,EAAeyC,YAAY1C,GAejC,OACE,yBAAKwB,UAAU,aACb,qDACEzB,EAcE,oCACE,yBAAKyB,UAAU,qBACb,4BACEA,UAAU,SACV9B,KAAK,SACL+B,QAAS,kBAAMH,EAAS9B,EJ7DhB,eI0DV,iBAOA,4BACEgC,UAAU,SACV9B,KAAK,SACL+B,QAAS,kBAAMH,EAAS9B,EJnEjB,cIgET,gBAOA,4BACEgC,UAAU,SACV9B,KAAK,SACL+B,QAAS,kBAAMH,EAAS9B,EJzEf,gBIsEX,mBASF,kBAAC,EAAD,CAAUY,MAAOA,KArCnB,oCACE,4BACEV,KAAK,SACL8B,UAAU,SACVC,QArBQ,WAClBH,ELhB+B,CAAE5B,KARf,kBKyBlBmC,IACGI,MAAK,SAACG,GACLd,ELjBgB,SAAClB,GAAD,MAA4B,CAClDV,KATgB,YAUhBU,SKeeuC,CAASP,IAClBd,ELnB4B,CAAE5B,KARf,sBK6BhBkD,OAAM,SAACC,GACNvB,ELjBmB,SAACrB,GAAD,MAA2B,CACpDP,KAZmB,eAanBO,gBKee6C,CAAYD,EAAEE,eAehBlD,EAAY,aAAe,iBAE7BI,GAAgB,uBAAGuB,UAAU,SAASvB,MC1C7C+C,EAAO,kBACX,kBAAC,IAAD,CAAUlC,MAAOA,GACf,kBAAC,IAAD,KACE,kBAAC,EAAD,SAKNmC,IAASC,OAAO,kBAAC,EAAD,MAAUC,SAASC,eAAe,W","file":"static/js/main.a7779de8.chunk.js","sourcesContent":["import { createStore, AnyAction } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { BY_TITLE, BY_NAME, BY_STATUS } from './constants';\n\nconst START_LOADING = 'START_LOADING';\nconst FINISH_LOADING = 'FINISH_LOADING';\nconst SET_TODOS = 'SET_TODOS';\nconst HANDLE_ERROR = 'HANDLE_ERROR';\n\nconst SORT_BY = 'SORT_BY';\nconst DELETE_TODO = 'DELETE';\n\nexport const startLoading = () => ({ type: START_LOADING });\nexport const finishLoading = () => ({ type: FINISH_LOADING });\nexport const setTodos = (todos: PreparedTodo[]) => ({\n  type: SET_TODOS,\n  todos,\n});\nexport const handleError = (errorMessage: string) => ({\n  type: HANDLE_ERROR,\n  errorMessage,\n});\nexport const setSortField = (sortField: string) => ({\n  type: SORT_BY,\n  sortField,\n});\n\nexport const deleteTodo = (id: number) => ({\n  type: DELETE_TODO,\n  id,\n});\n\nexport const getTodos = (state: RootState) => state.todos;\nexport const getIsLoading = (state: RootState) => state.isLoading;\nexport const getIsLoaded = (state: RootState) => state.isLoaded;\nexport const getSortField = (state: RootState) => state.sortField;\nexport const getError = (state: RootState) => state.errorMessage;\n\nexport const getVisibleTodos = (state: RootState) => {\n  const visibleTodos = [...state.todos];\n\n  switch (state.sortField) {\n    case BY_TITLE:\n      visibleTodos.sort((a: PreparedTodo, b: PreparedTodo) => (a.title.localeCompare(b.title)));\n      break;\n\n    case BY_NAME:\n      visibleTodos\n        .sort((a: PreparedTodo, b: PreparedTodo) => (a.user.name.localeCompare(b.user.name)));\n      break;\n\n    case BY_STATUS:\n      visibleTodos.sort((a: PreparedTodo, b: PreparedTodo) => (+a.completed - +b.completed));\n      break;\n\n    default:\n      return visibleTodos;\n  }\n\n  return visibleTodos;\n};\n\nexport type RootState = {\n  todos: PreparedTodo[];\n  sortField: string;\n  isLoaded: boolean;\n  isLoading: boolean;\n  errorMessage: string;\n};\n\nconst initialState: RootState = {\n  todos: [],\n  sortField: '',\n  isLoaded: false,\n  isLoading: false,\n  errorMessage: '',\n};\n\nconst rootReducer = (state = initialState, action: AnyAction): RootState => {\n  switch (action.type) {\n    case START_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n        isLoaded: false,\n        errorMessage: '',\n      };\n\n    case SET_TODOS:\n      return {\n        ...state,\n        todos: [...action.todos],\n      };\n\n    case HANDLE_ERROR:\n      return {\n        ...state,\n        errorMessage: action.errorMessage,\n        isLoading: false,\n        isLoaded: false,\n      };\n\n    case FINISH_LOADING:\n      return {\n        ...state,\n        isLoading: false,\n        isLoaded: true,\n      };\n\n    case SORT_BY:\n      return {\n        ...state,\n        sortField: action.sortField,\n      };\n\n    case DELETE_TODO:\n      return {\n        ...state,\n        todos: [...state.todos].filter(todo => todo.id !== action.id),\n      };\n\n    default: return state;\n  }\n};\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","export const BY_TITLE = 'BY_TITLE';\nexport const BY_NAME = 'BY_NAME';\nexport const BY_STATUS = 'BY_STATUS';\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteTodo } from './store/index';\n\n\ntype TodoItemProps = {\n  todo: PreparedTodo;\n};\n\nconst TodoItem: React.FC<TodoItemProps> = ({ todo }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <div className={todo.completed\n        ? 'user__completed-true'\n        : 'user__completed-false'}\n      >\n        <div className=\"user\">\n          <span className=\"user__id\">{todo.id}</span>\n          <p className=\"user__name\">\n            Name:\n            {' '}\n            {todo.user.name}\n          </p>\n          <p className=\"user__title\">\n            Title:\n            {' '}\n            {todo.title}\n          </p>\n          <p className=\"user__status\">\n            Status:\n            {' '}\n            {todo.completed ? 'completed' : 'in procces'}\n          </p>\n          <button\n            type=\"button\"\n            className=\"button__delete\"\n            onClick={() => dispatch(deleteTodo(todo.id))}\n          >\n            Delete Todo\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport TodoItem from './TodoItem';\n\ntype TodoListProps = {\n  todos: PreparedTodo[];\n};\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos }) => {\n  return (\n    <div className=\"todo__list\">\n      {todos.map((todo) => (\n        <TodoItem todo={todo} key={todo.id} />\n      ))}\n    </div>\n  );\n};\n","const API_USERS_URL = 'https://jsonplaceholder.typicode.com/users';\nconst API_TODOS_URL = 'https://jsonplaceholder.typicode.com/todos';\n\n\nexport const getUsers = () => {\n  return fetch(API_USERS_URL)\n    .then(response => response.json());\n};\n\nexport const getTodos = () => {\n  return fetch(API_TODOS_URL)\n    .then(response => response.json());\n};\n\nexport const getPreparedTodos = async () => {\n  const [todosFromServer, usersFromServer] = await Promise.all([getTodos(), getUsers()]);\n  const preparedTodos = todosFromServer.map((todo: Todo) => ({\n    ...todo,\n    user: usersFromServer.find((user: User) => user.id === todo.userId),\n  }));\n\n  return preparedTodos;\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './App.scss';\nimport { TodoList } from './TodoList';\nimport { getPreparedTodos } from './api';\nimport { BY_TITLE, BY_NAME, BY_STATUS } from './store/constants';\nimport {\n  startLoading,\n  finishLoading,\n  getVisibleTodos,\n  getIsLoaded,\n  getIsLoading,\n  setSortField,\n  setTodos,\n  handleError,\n  getError,\n} from './store';\n\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n  const todos = useSelector(getVisibleTodos);\n  const isLoaded = useSelector(getIsLoaded);\n  const isLoading = useSelector(getIsLoading);\n  const errorMessage = useSelector(getError);\n\n\n  const loadedTodos = () => {\n    dispatch(startLoading());\n    getPreparedTodos()\n      .then((todosFromServer) => {\n        dispatch(setTodos(todosFromServer));\n        dispatch(finishLoading());\n      })\n      .catch((e) => {\n        dispatch(handleError(e.message));\n      });\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Dynamic list of TODOs</h1>\n      {!isLoaded\n        ? (\n          <>\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={loadedTodos}\n            >\n              {isLoading ? 'Loading...' : 'Click to Load'}\n            </button>\n            {errorMessage && <p className=\"error\">{errorMessage}</p>}\n          </>\n        )\n        : (\n          <>\n            <div className=\"button__container\">\n              <button\n                className=\"button\"\n                type=\"button\"\n                onClick={() => dispatch(setSortField(BY_TITLE))}\n              >\n                Sort By Title\n              </button>\n              <button\n                className=\"button\"\n                type=\"button\"\n                onClick={() => dispatch(setSortField(BY_NAME))}\n              >\n                Sort By Name\n              </button>\n              <button\n                className=\"button\"\n                type=\"button\"\n                onClick={() => dispatch(setSortField(BY_STATUS))}\n              >\n                Sort By Status\n              </button>\n            </div>\n\n            <TodoList todos={todos} />\n\n          </>\n        )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport store from './store';\nimport App from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}